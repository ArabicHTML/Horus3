/*
Theme Name: arabic responsive framework
Author: Amro Eldewiny
Authour URI: http://arabic-html.com
Description: First demo for the template framwork
Version: 3.0
*/

/*===================================================
                      HTML5 Resat
=====================================================*/

article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary
{
  display: block
}

audio,canvas,video {
  display: inline-block;
  *display: inline;
  *zoom: 1
}

* {
  box-sizing: border-box
}

html {
  font-size: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%
}

html,button,input,select,textarea {
  font-family: sans-serif
}

body {
  margin: 0;
  padding: 0;
  text-align: right;
  direction: rtl;
  font-weight: 700;
  font-size: 16px;
  line-height: 1.5;
  font-family: sans-serif
}

a:focus {
  outline: thin dotted
}

a:active,a:hover {
  outline: 0
}

h1 {
  font-size: 2em;
  margin: .67em 0
}

h2 {
  font-size: 1.5em;
  margin: .83em 0
}

h3 {
  font-size: 1.17em;
  margin: 1em 0
}

h4 {
  font-size: 1em;
  margin: 1.33em 0
}

h5 {
  font-size: .83em;
  margin: 1.67em 0
}

h6 {
  font-size: .67em;
  margin: 2.33em 0
}

b,strong {
  font-weight: bold
}

blockquote {
  margin: 1em 40px
}

dfn {
  font-style: italic
}

hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0
}

mark {
  background: #ff0;
  color: #000
}

p,pre {
  margin: 1em 0
}

code,kbd,pre,samp {
  font-family: monospace, serif;
  font-family: 'courier new', monospace;
  font-size: 1em
}

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word
}

q {
  quotes: none
}

q:before,q:after {
  content: '';
  content: none
}

small {
  font-size: 80%
}

sub,sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline
}

sup {
  top: -0.5em
}

sub {
  bottom: -0.25em
}

dl,menu,ol,ul {
  margin: 1em 0
}

dd {
  margin: 0 0 0 40px
}

menu,ol,ul {
  padding: 0 0 0 40px
}

nav ul,nav ol {
  list-style: none;
  list-style-image: none
}

img {
  border: 0;
  -ms-interpolation-mode: bicubic
}

figure {
  margin: 0
}

form {
  margin: 0
}

fieldset {
  border: 1px solid silver;
  margin: 0 2px;
  padding: .35em .625em .75em
}

legend {
  border: 0;
  padding: 0;
  white-space: normal;
  *margin-left: -7px
}

button,input,select,textarea {
  font-size: 100%;
  margin: 0;
  vertical-align: baseline;
  *vertical-align: middle
}

button,input {
  line-height: normal
}

button,select {
  text-transform: none
}

button,html input[type="button"],input[type="reset"],input[type="submit"]
{
  -webkit-appearance: button;
  cursor: pointer;
  *overflow: visible
}

button[disabled],html input[disabled] {
  cursor: default
}

input[type="checkbox"],input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
  *height: 13px;
  *width: 13px
}

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box
}

input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration
{
  -webkit-appearance: none
}

button::-moz-focus-inner,input::-moz-focus-inner {
  border: 0;
  padding: 0
}

textarea {
  overflow: auto;
  vertical-align: top
}

table {
  borderlapse: collapse;
  border-spacing: 0
}

/*===================================================
                    grid system
=====================================================*/

$columns: 12;
$gutter: 24px;

$font-size: 16px;
$line-height: 24px;

$container-width: 1024px;

$screen-xs-max: 360px;
$screen-sm-max: 480px;
$screen-md-max: 720px;
$screen-lg-max: 1024px;
$screen-xl-max: 1600px;

$xs: 0;
$sm: $screen-sm-max;
$md: $screen-md-max;
$lg: $screen-lg-max;
$xl: $screen-xl-max;

$media-breakpoints: (
        xs: $xs,
        sm: $sm,
        md: $md,
        lg: $lg,
        xl: $xl
);

.container {
  margin: 0 auto;
  max-width: $container-width;
  padding-left: $gutter / 2;
  padding-right: $gutter / 2;
}

.flex {
  display: flex;
  flex-wrap: wrap;
}

[class*="col"] {
  min-height: 1px;
  flex: 1;
  padding-left: $gutter / 2;
  padding-right: $gutter / 2;
}

/* Generate Columns */
@each $key, $breakpoint in $media-breakpoints {
  @media (min-width: $breakpoint) {
    @for $i from 1 through $columns {
      $percent: $i/$columns * 100%;
      .col-#{$key}-#{$i} {
        flex: 0 0 $percent;
        max-width: $percent;
      }
    }
  }
}

[data-breakpoint] {
  &:after {
    content: 'Mobile';
    @media (min-width: $sm) {
      content: 'Tablet';
    }
    @media (min-width: $md) {
      content: 'Laptop';
    }
    @media (min-width: $lg) {
      content: 'Desktop';
    }
  }
}